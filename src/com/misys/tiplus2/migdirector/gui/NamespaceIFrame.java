/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.misys.tiplus2.migdirector.gui;

import com.misys.tiplus2.migdirector.dao.NamespaceDAO;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author falmarez
 */
public class NamespaceIFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form NamespaceIFrame
     */
    boolean newEntry = false;
    
    public NamespaceIFrame() {
        initComponents();
        initCustomComponents();
        loadDB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        repTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        nameComboBox = new javax.swing.JComboBox();
        saveButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        nameIdTextField = new javax.swing.JTextField(20);
        jLabel5 = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setTitle("Namespaces");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Namespaces");

        jLabel2.setText("Namespace");

        jLabel3.setText("Representation");

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        jLabel4.setText("Enter a letter to represent namespace in XML");

        nameComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None" }));
        nameComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameComboBoxActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        newButton.setText("New");
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });

        nameIdTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameIdTextFieldActionPerformed(evt);
            }
        });

        jLabel5.setText("Unique Id");

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(newButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveButton)
                        .addGap(180, 180, 180))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(nameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(jLabel3)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jSeparator1)
                            .addComponent(jSeparator2))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(repTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(nameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(repTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(saveButton)
                        .addComponent(editButton)
                        .addComponent(deleteButton)))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameComboBoxActionPerformed
        
        Object selected = nameComboBox.getSelectedItem();
        
        if(!selected.toString().equals("None")){
            
            newEntry = false;
        
            clearTextFields();
            disableTextFields();
            
            try {
                NamespaceDAO namespaceDao = new NamespaceDAO();
                ResultSet rs = namespaceDao.retrieveDBContents(selected.toString());
                rs.next();    
                
                nameIdTextField.setText(rs.getString("NAMESPACEID"));
                nameTextField.setText(rs.getString("NAME"));
                repTextField.setText(rs.getString("CHARPRESENT"));
                
                saveButton.setEnabled(true);
                editButton.setEnabled(true);
                deleteButton.setEnabled(true);
                
                namespaceDao.closeStatement();
                rs.close();
                
                
            } catch (SQLException ex) {
                Logger.getLogger(NamespaceIFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
                  
        }else{
            
            clearTextFields();
            
            saveButton.setEnabled(false);
            editButton.setEnabled(false);
            deleteButton.setEnabled(false);
        }
        
    }//GEN-LAST:event_nameComboBoxActionPerformed

    private void nameIdTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameIdTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameIdTextFieldActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        
        this.newEntry = true;
     
        nameComboBox.setSelectedItem("None");
        
        clearTextFields();
        
        enableTextFields();
        
        saveButton.setEnabled(true);
        editButton.setEnabled(false);
        deleteButton.setEnabled(false);
    }//GEN-LAST:event_newButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        
        //check if fields are empty
        if(!emptyFields()){
        
        NamespaceDAO namespaceDao = new NamespaceDAO();
        Object selected = nameComboBox.getSelectedItem();   
                
        //return error
        if(newEntry == true && namespaceDao.recordExist(nameIdTextField.getText())){
        JOptionPane.showMessageDialog(null, "Record already exists! Please input a unique 'Unique Name'", "Insert", 1);
        
        }
        
        //add
        if(newEntry == true && !namespaceDao.recordExist(nameIdTextField.getText())){
                           
            if(namespaceDao.execute("", nameIdTextField.getText(), nameTextField.getText(), repTextField.getText(), "A")){
            JOptionPane.showMessageDialog(null, "New record inserted!", "Insert", 1);
            newEntry = false;
             nameComboBox.addItem(nameIdTextField.getText());           
            
            clearTextFields();
            disableTextFields();
            
            saveButton.setEnabled(false);
             
            }
            
           
        }

        //update
        if(newEntry == false && namespaceDao.recordExist(selected.toString())){
                            
            if(namespaceDao.execute(selected.toString(), nameIdTextField.getText(), nameTextField.getText(), repTextField.getText(),"U")){
            JOptionPane.showMessageDialog(null, "Namespace with ID "+selected.toString()+" was updated!", "Update", 1);
            disableTextFields();
            saveButton.setEnabled(false);
            }
           
        }
        
        }
        else{
          JOptionPane.showMessageDialog(null, "Please input all three(3) fields!", "Insert", 1);
        }

    }//GEN-LAST:event_saveButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        
        enableTextFields();
        
        editButton.setEnabled(false);
        deleteButton.setEnabled(true);
        
    }//GEN-LAST:event_editButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        NamespaceDAO namespaceDao = new NamespaceDAO();
        
        Object selected = nameComboBox.getSelectedItem();
        
        if(namespaceDao.execute(selected.toString(), "", "", "", "D")){
        JOptionPane.showMessageDialog(null, "Namespace with ID "+selected.toString()+" was deleted!", "Delete", 1);
        }
        
        nameComboBox.removeItem(selected.toString());
        
        clearTextFields();
        disableTextFields();
    }//GEN-LAST:event_deleteButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JComboBox nameComboBox;
    private javax.swing.JTextField nameIdTextField;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JButton newButton;
    private javax.swing.JTextField repTextField;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables

    private void loadDB() {
               
        NamespaceDAO namespaceDAO = new NamespaceDAO();
        
        disableTextFields();
        disableButtons();
        
        if(!namespaceDAO.isTableEmpty()){
        //table is not emtpty so populate
            ResultSet rs = namespaceDAO.retrieveDBContents();
            
            
            try {
                while(rs.next()){
                    nameComboBox.addItem(rs.getString("NAMESPACEID"));         
                }
                
                namespaceDAO.closeResultSet();
                rs.close();
                
            } catch (SQLException ex) {
                Logger.getLogger(NamespaceIFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        }
    }
    
    private void disableTextFields(){
        
        nameIdTextField.setEnabled(false);
        nameTextField.setEnabled(false);
        repTextField.setEnabled(false);
    }
    
    private void enableTextFields(){
        
        nameIdTextField.setEnabled(true);
        nameTextField.setEnabled(true);
        repTextField.setEnabled(true);
    }
    
    private void clearTextFields(){
        
        nameIdTextField.setText("");
        nameTextField.setText("");
        repTextField.setText("");
    }
    
    private boolean emptyFields(){
        
        boolean result = true;
        
        result = nameIdTextField.getText().length()<1 || nameTextField.getText().length()<1 || repTextField.getText().length()<1;
        
        return result;
    }

    private void initCustomComponents() {
        
    }

    private void disableButtons() {
        
        saveButton.setEnabled(false);
        editButton.setEnabled(false);
        deleteButton.setEnabled(false);
        
    }
    
    
}
