/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.misys.tiplus2.migdirector.gui;

import com.misys.tiplus2.migdirector.dao.MessageDAO;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author falmarez
 */
public class MessageIFrame extends javax.swing.JInternalFrame {

    boolean newEntry = false;
        
    public MessageIFrame() {
        initComponents();
        initCustomComponents();
        loadDB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        messageLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        messageTextField = new javax.swing.JTextField();
        tiMessageTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        descriptionTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        messageComboBox = new javax.swing.JComboBox();
        jSeparator2 = new javax.swing.JSeparator();
        saveButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();

        setClosable(true);
        setTitle("Messages");

        messageLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        messageLabel.setText("Messages");

        messageTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("Message Name");

        jLabel2.setText("TI Message");

        jLabel3.setText("Description");

        messageComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None" }));
        messageComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageComboBoxActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        newButton.setText("New");
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(newButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(messageComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(messageLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(messageTextField)
                                        .addComponent(tiMessageTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
                                    .addComponent(descriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 16, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(messageLabel)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(messageComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tiMessageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(editButton)
                    .addComponent(deleteButton)
                    .addComponent(newButton))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void messageTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_messageTextFieldActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        // TODO add your handling code here:
        
        newEntry = true;
        
        messageComboBox.setSelectedItem("None");
        
        clearTextFields();
        enableTextFields();
        
        saveButton.setEnabled(true);
        
    }//GEN-LAST:event_newButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        if(!emptyFields()){
            
            MessageDAO messageDao = new MessageDAO();
            Object selected = messageComboBox.getSelectedItem();
            
            if(newEntry==true && messageDao.recordExists(messageTextField.getText())){
            JOptionPane.showMessageDialog(null, "Record already exists! Please input a unique 'Unique Name' is unique", "Insert", 1);
            }
            
            if(newEntry==true && !messageDao.recordExists(messageTextField.getText())){
            
                if(messageDao.execute("",messageTextField.getText(),tiMessageTextField.getText(),descriptionTextField.getText(),"A")){
                    
                    JOptionPane.showMessageDialog(null, "New record inserted!", "Insert", 1);
                    newEntry = false;
                    messageComboBox.addItem(messageTextField.getText());           
            
                    clearTextFields();
                    disableTextFields();

                    saveButton.setEnabled(false);
                }
                
                
                                
            }
            
            if(newEntry==false && messageDao.recordExists(selected.toString())){
                
                if(messageDao.execute(selected.toString(),messageTextField.getText(),tiMessageTextField.getText(),descriptionTextField.getText(),"U")){
                
                    JOptionPane.showMessageDialog(null, "Message with name "+selected.toString()+" was updated!", "Update", 1);
                    disableTextFields();
                    saveButton.setEnabled(false);
                
                }
                   
            }
            
        }
        else{
          JOptionPane.showMessageDialog(null, "Please input all three(3) fields!", "Insert", 1);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        enableTextFields();
        
        editButton.setEnabled(false);
        deleteButton.setEnabled(true);
    }//GEN-LAST:event_editButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        MessageDAO messageDao = new MessageDAO();
        
        Object selected = messageComboBox.getSelectedItem();
        
        if(messageDao.execute(selected.toString(), "", "", "", "D")){
        
        JOptionPane.showMessageDialog(null, "Name with ID "+selected.toString()+" was deleted!", "Delete", 1);
        messageComboBox.removeItem(selected.toString());
        clearTextFields();
        disableTextFields();
        
        }
        

        

    }//GEN-LAST:event_deleteButtonActionPerformed

    private void messageComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageComboBoxActionPerformed
        
        Object selected = messageComboBox.getSelectedItem();
        
        if(!selected.toString().equals("None")){
            
            newEntry = false;
        
            clearTextFields();
            disableTextFields();
            
            try {
                MessageDAO messageDao = new MessageDAO();
                ResultSet rs = messageDao.retrieveDBContents(selected.toString());
                rs.next();    
                
                messageTextField.setText(rs.getString("NAME"));
                tiMessageTextField.setText(rs.getString("TINAME"));
                descriptionTextField.setText(rs.getString("DESCRIPTION"));
                
                editButton.setEnabled(true);
                deleteButton.setEnabled(true);
                
                messageDao.closeStatement();
                rs.close();
                
                
            } catch (SQLException ex) {
                Logger.getLogger(NamespaceIFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
        
        
        }
    }//GEN-LAST:event_messageComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField descriptionTextField;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JComboBox messageComboBox;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JTextField messageTextField;
    private javax.swing.JButton newButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField tiMessageTextField;
    // End of variables declaration//GEN-END:variables

    private void initCustomComponents() {
        
    }
    
    private void loadDB() {
        
        MessageDAO messageDao = new MessageDAO();
        
        disableTextFields();
        disableButtons();
        
        if(!messageDao.isTableEmpty()){
        //table is not emtpty so populate
            ResultSet rs = messageDao.retrieveDBContents();
            
            
            try {
                while(rs.next()){
                    messageComboBox.addItem(rs.getString("NAME"));         
                }
                
                messageDao.closeResultSet();
                rs.close();
                
            } catch (SQLException ex) {
                Logger.getLogger(NamespaceIFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        }
        
    }
    
    private void disableTextFields(){
    
        messageTextField.setEnabled(false);
        tiMessageTextField.setEnabled(false);
        descriptionTextField.setEnabled(false);
        
    }
    
    private void enableTextFields(){
        
        messageTextField.setEnabled(true);
        tiMessageTextField.setEnabled(true);
        descriptionTextField.setEnabled(true);
        
    }
    
    private void disableButtons(){
    
        saveButton.setEnabled(false);
        editButton.setEnabled(false);
        deleteButton.setEnabled(false);
        
    }
    
    private void enableButtons(){
        
        saveButton.setEnabled(true);
        editButton.setEnabled(true);
        deleteButton.setEnabled(true);    
        
    }

    private void clearTextFields(){
        
        messageTextField.setText("");
        tiMessageTextField.setText("");
        descriptionTextField.setText("");
        
    }
    
    private boolean emptyFields(){
    
        boolean result = true;
        
        result = messageTextField.getText().length()<1 || tiMessageTextField.getText().length()<1 || descriptionTextField.getText().length()<1;
        
        return result;
    
    }
    
    

}
